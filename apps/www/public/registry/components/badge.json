{
  "name": "badge",
  "files": [
    {
      "name": "badge.tsx",
      "content": "import * as React from \"react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { cn } from \"@/utils/cn\";\n\nconst variants = {\n  gray: \"bg-[#8f8f8f] text-white\",\n  \"gray-subtle\": \"bg-[#1f1f1f] text-white\",\n  blue: \"bg-[#0072f5] text-white\",\n  \"blue-subtle\": \"bg-[#10233d] text-[#52a8ff]\",\n  purple: \"bg-[#8e4ec6] text-white\",\n  \"purple-subtle\": \"bg-[#2e1938] text-[#bf7af0]\",\n  amber: \"bg-[#ffb224] text-black\",\n  \"amber-subtle\": \"bg-[#331b00] text-[#f2a20d]\",\n  red: \"bg-[#e5484d] text-white\",\n  \"red-subtle\": \"bg-[#3c1618] text-[#ff6166]\",\n  pink: \"bg-[#ea3e83] text-white\",\n  \"pink-subtle\": \"bg-[#4f1c31] text-[#f75f8f]\",\n  green: \"bg-[#45a557] text-white\",\n  \"green-subtle\": \"bg-[#0f2e18] text-[#62c073]\",\n  teal: \"bg-[#12a594] text-white\",\n  \"teal-subtle\": \"bg-[#083a33] text-[#0ac7b4]\",\n  inverted: \"bg-primary text-primary-foreground\",\n};\n\nconst sizes = {\n  sm: \"text-xs px-1.5 py-[1.5px]\",\n  md: \"text-sm px-2.5 py-[2px]\",\n  lg: \"text-lg px-3 py-[2.5px]\",\n};\n\nconst badgeVariants = cva(\n  \"w-fit h-fit inline-flex items-center rounded-full px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 capitalize\",\n  {\n    variants: {\n      variant: {\n        ...variants,\n      },\n      size: {\n        ...sizes,\n      },\n    },\n    defaultVariants: {\n      variant: \"gray\",\n      size: \"md\",\n    },\n  },\n);\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {\n  \n  children: React.ReactNode;\n  \n  variant: keyof typeof variants;\n  \n  size?: \"sm\" | \"md\" | \"lg\";\n  \n  icon?: React.ReactNode;\n}\n\n\nconst Badge: React.FC<BadgeProps> = ({\n  children,\n  className,\n  variant,\n  size = \"md\",\n  icon,\n  ...props\n}: BadgeProps): React.ReactElement => {\n  return (\n    <div className={cn(badgeVariants({ variant, size }), className)} {...props}>\n      {icon && <span className=\"mr-1\">{icon}</span>}\n      {children}\n    </div>\n  );\n};\n\nexport { Badge, badgeVariants };\n"
    }
  ],
  "type": "components:ui"
}
